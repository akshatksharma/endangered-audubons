{"ast":null,"code":"import _classCallCheck from \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/src/App.js\";\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport screen from 'react-sizes';\nimport { database } from './database.js';\nimport TopBar from './topbar/TopBar';\nimport About from './about/About';\nimport Birds from './birds/Birds';\nimport Conservation from './conservation/Conservation';\nimport \"./index.css\";\nimport './App.css';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      birbs: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Router, {\n        basename: process.env.PUBLIC_URL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return (\n            /*#__PURE__*/\n            // <div className=\"test-triangle\"></div>\n            React.createElement(React.Fragment, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"page page--main\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(TopBar, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"page__container page__container--mainpage\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"maintext\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }\n            }, \"Welcome to Endangered Audubons. The late John James Audubon became celebrated for his immaculate plein-aire drawings of native birds around the United States. Today, however, many of such bird species are threatened, endangered, or critically endangered. This archive showcases Audubon\\u2019s work of such bird species in the hopes of spreading awareness of these animals\\u2019 condition and appreciation of Audubon\\u2019s artwork.\", /*#__PURE__*/React.createElement(\"br\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }\n            }), \"Please peruse this site using the navigation.\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"titletext titletext--main\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"h1\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }\n            }, \"Endangered\", /*#__PURE__*/React.createElement(\"br\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 35\n              }\n            }), \" Audubons\")))))\n          );\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/birds\",\n        render: function render(routeProps) {\n          return /*#__PURE__*/React.createElement(Birds, Object.assign({}, routeProps, {\n            birbs: _this2.state.birbs,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/conservation\",\n        component: Conservation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/about\",\n        component: About,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch(\"https://ecos.fws.gov/ecp/pullreports/catalog/species/report/species/export?columns=@sid,cn,sn,status,desc;/species/life_history@desc&filter=/species@gn = 'Birds'&filter=/species@sid in (3232, 6174, 8230, 7614, 2083, 758)&filter=/species@status in ('Endangered', 'Threatened')\", {\n        method: 'get'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res_json) {\n        var resData = res_json.data; // putting JSON data into more usable format\n\n        var birdData = resData.map(function (element) {\n          return {\n            id: element[0],\n            name: element[1].replace(/ *\\([^)]*\\) */g, \"\"),\n            plateNo: database[element[0]].plateNo,\n            taxName: element[2].value,\n            status: element[3],\n            endangered: element[4],\n            info: element[5]\n          };\n        }); // trying to identify which items in array are duplicates \n        // first sorting, then checking if next item in list has the \n        // same id -- if they do, then there is a duplicate\n\n        birdData.sort(function (birdA, birdB) {\n          if (birdA.id < birdB.id) return -1;\n          if (birdA.id > birdB.id) return 1;\n          return 0;\n        });\n        var dupBirds = [];\n\n        for (var i = 0; i < birdData.length - 1; i++) {\n          var elem = birdData[i];\n          var nextElem = birdData[i + 1];\n\n          if (elem.id === nextElem.id) {\n            dupBirds.push(nextElem);\n          }\n        } // filtering all the duplicates out by using a set \n\n\n        var filteredData = Array.from(new Set(birdData.map(function (elem) {\n          return elem.id;\n        }))).map(function (id) {\n          return birdData.find(function (bird) {\n            return bird.id === id;\n          });\n        }); // for all the items with duplicates, concatenating their information through looping through the no duplicate and duplicate arrays. \n        // when ids match, concatenate status and endangered information with commas / semicolons etc\n\n        filteredData.forEach(function (filterElem) {\n          dupBirds.forEach(function (dupElem) {\n            if (filterElem.id === dupElem.id) {\n              filterElem.status += \", \" + dupElem.status;\n              filterElem.endangered += \"; \" + dupElem.endangered;\n            }\n          });\n        }); // finally set state with the retrieved and processed information \n\n        _this3.setState({\n          birbs: filteredData\n        });\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/akshatsharma/git/cse204/10-final-project-akshat_namit/endangeredaudubons/src/App.js"],"names":["React","Component","HashRouter","Router","Route","screen","database","TopBar","About","Birds","Conservation","App","props","state","birbs","process","env","PUBLIC_URL","routeProps","fetch","method","then","res","json","res_json","resData","data","birdData","map","element","id","name","replace","plateNo","taxName","value","status","endangered","info","sort","birdA","birdB","dupBirds","i","length","elem","nextElem","push","filteredData","Array","from","Set","find","bird","forEach","filterElem","dupElem","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {HashRouter as Router, Route} from 'react-router-dom'\nimport screen from 'react-sizes'\nimport {database} from './database.js'\nimport TopBar from './topbar/TopBar'\nimport About from './about/About'\nimport Birds from './birds/Birds'\nimport Conservation from './conservation/Conservation'\nimport \"./index.css\"\nimport './App.css'\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      birbs: []\n    }\n  }\n\n\n  render() {\n    return (\n      <Router basename = {process.env.PUBLIC_URL}>\n          <Route exact path = \"/\" render = {props => (\n            // <div className=\"test-triangle\"></div>\n            <React.Fragment>\n              <div className = \"page page--main\">\n              <TopBar></TopBar>\n                <div className = \"page__container page__container--mainpage\">\n                  <div className = \"maintext\">\n                    <p>\n                    Welcome to Endangered Audubons. The late John James Audubon became celebrated for his immaculate plein-aire drawings of native birds around the United States. Today, however, many of such bird species are threatened, endangered, or critically endangered. This archive showcases Audubon’s work of such bird species in the hopes of spreading awareness of these animals’ condition and appreciation of Audubon’s artwork.\n                    <br></br>\n                    Please peruse this site using the navigation.\n                    </p>\n                  </div>\n                  <div className = \"titletext titletext--main\">\n                    <h1>Endangered<br></br> Audubons</h1>\n                  </div>\n                </div>\n            </div>\n            </React.Fragment>\n          )}/>\n          {/* <Route path = \"/birds\" component = {Birds}/> */}\n          <Route path = \"/birds\" render = {(routeProps) => (\n              <Birds {...routeProps} birbs = {this.state.birbs} ></Birds>\n          )}/>\n          <Route path = \"/conservation\" component = {Conservation}/>\n          <Route path = \"/about\" component = {About}/>\n      </Router>\n      \n    )\n  }\n\n  componentDidMount() {\n    fetch(\"https://ecos.fws.gov/ecp/pullreports/catalog/species/report/species/export?columns=@sid,cn,sn,status,desc;/species/life_history@desc&filter=/species@gn = 'Birds'&filter=/species@sid in (3232, 6174, 8230, 7614, 2083, 758)&filter=/species@status in ('Endangered', 'Threatened')\", {\n      method: 'get'\n    } ).then(res => (res.json())).then(res_json => {\n        let resData = res_json.data;\n\n        // putting JSON data into more usable format\n\n        let birdData = resData.map(element => (\n          {\n            id: element[0],\n            name: element[1].replace(/ *\\([^)]*\\) */g, \"\"),\n            plateNo: database[element[0]].plateNo,\n            taxName: element[2].value,\n            status: element[3],\n            endangered: element[4],\n            info: element[5]\n          }\n        ));\n        \n        // trying to identify which items in array are duplicates \n        // first sorting, then checking if next item in list has the \n        // same id -- if they do, then there is a duplicate\n        birdData.sort((birdA, birdB) => {\n          if (birdA.id < birdB.id) return -1;\n          if (birdA.id > birdB.id) return 1;\n          return 0;\n        })\n\n        let dupBirds = []\n\n        for (let i = 0; i < birdData.length-1; i++) {\n          const elem = birdData[i];\n          const nextElem = birdData[i+1]\n\n          if (elem.id === nextElem.id) {\n            dupBirds.push(nextElem);\n          }\n        }\n\n        // filtering all the duplicates out by using a set \n\n        let filteredData = Array.from(new Set(birdData.map(elem => elem.id))).map(id => birdData.find(bird => bird.id === id))\n\n        // for all the items with duplicates, concatenating their information through looping through the no duplicate and duplicate arrays. \n        \n        // when ids match, concatenate status and endangered information with commas / semicolons etc\n        filteredData.forEach(filterElem => {\n          dupBirds.forEach(dupElem => {\n              if (filterElem.id === dupElem.id) {\n                filterElem.status += \", \" + dupElem.status;\n                filterElem.endangered += \"; \" + dupElem.endangered;\n              }\n            });\n          })\n\n        // finally set state with the retrieved and processed information \n        this.setState({\n          birbs: filteredData\n        })\n      }\n    )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}